/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'com.diffplug.spotless' version '6.9.1'
    id 'org.springframework.boot' version '2.6.10'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'jacoco'
    id 'idea'
}

group = 'com.google.cloud.solutions'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

def floggerVersion = "0.7.4"
def springBootVersion = "2.7.2"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://maven-central-asia.storage.googleapis.com/maven2' }
}

dependencies {

    // Commons library deps
    implementation "com.google.guava:guava:31.1-jre"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.13.3"

    // Logging framework
    implementation "com.google.flogger:flogger:${floggerVersion}"
    implementation "com.google.flogger:google-extensions:${floggerVersion}"
    runtimeOnly "com.google.flogger:flogger-system-backend:${floggerVersion}"

    // Google Cloud Service Client Libraries
    implementation "com.google.cloud:google-cloud-dlp:3.6.3"

    //Spring deps
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

    // Test Deps

    testImplementation "junit:junit:4.13.2"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

    // proto json format
    testImplementation "com.google.protobuf:protobuf-java:3.21.4"
    testImplementation "com.google.protobuf:protobuf-java-util:3.21.4"
    testImplementation "com.google.truth.extensions:truth-proto-extension:1.1.3"

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

jacoco {
    toolVersion = "0.8.8"
}

test {
    dependsOn cleanTest
    testLogging.showStandardStreams = true
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        csv.enabled false
        xml.enabled true
        html.enabled true
    }
}

spotless {
    java {
        target "**/*.java"
        targetExclude "third_party/**"
        googleJavaFormat('1.15.0')
        removeUnusedImports()
        importOrder()
        trimTrailingWhitespace()
        endWithNewline()
        licenseHeader "/*\n" +
                " * Copyright \$YEAR Google LLC\n" +
                " *\n" +
                " * Licensed under the Apache License, Version 2.0 (the \"License\");\n" +
                " * you may not use this file except in compliance with the License.\n" +
                " * You may obtain a copy of the License at\n" +
                " *\n" +
                " *     https://www.apache.org/licenses/LICENSE-2.0\n" +
                " *\n" +
                " * Unless required by applicable law or agreed to in writing, software\n" +
                " * distributed under the License is distributed on an \"AS IS\" BASIS,\n" +
                " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n" +
                " * See the License for the specific language governing permissions and\n" +
                " * limitations under the License.\n" +
                " */\n" +
                "\n"
    }

    kotlin {
        target "**/*.kt"
        ktlint()
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }

    freshmark {
        target '*.md'
        indentWithSpaces(2)
        trimTrailingWhitespace()
        endWithNewline()
    }

    format "proto", {
        target "**/*.proto"
        licenseHeader("// Copyright \$YEAR Google LLC\n" +
                "//\n" +
                "// Licensed under the Apache License, Version 2.0 (the \"License\");\n" +
                "// you may not use this file except in compliance with the License.\n" +
                "// You may obtain a copy of the License at\n" +
                "//\n" +
                "//     http://www.apache.org/licenses/LICENSE-2.0\n" +
                "//\n" +
                "// Unless required by applicable law or agreed to in writing, software\n" +
                "// distributed under the License is distributed on an \"AS IS\" BASIS,\n" +
                "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n" +
                "// See the License for the specific language governing permissions and\n" +
                "// limitations under the License.", "syntax")
        indentWithSpaces(2)
        trimTrailingWhitespace()
        endWithNewline()
    }


    format "gradle", {
        target "**/*.gradle"
        indentWithSpaces(2)
        trimTrailingWhitespace()
        endWithNewline()
    }

    format "misc", {
        target "**/.gitignore", "*.xml", "src/**/*.xml"
        indentWithSpaces(2)
        trimTrailingWhitespace()
        endWithNewline()
    }
}
